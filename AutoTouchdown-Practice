-- Local Script
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local targetPosition1 = Vector3.new(247, 6, -164)
local targetPosition2 = Vector3.new(246, 6, 169)

local football = nil

-- Function to highlight the local player
local function highlightPlayer(player)
    if not player:FindFirstChild("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Parent = player
        highlight.FillColor = Color3.fromRGB(255, 255, 0) -- Yellow highlight
    end
end

-- Function to check if local player has the football
local function hasFootball()
    for _, item in pairs(character:GetChildren()) do
        if item:IsA("Tool") and item.Name == "Football" then
            football = item
            return true
        end
    end
    return false
end

-- Function to move to target position while avoiding other players
local function moveToPosition(targetPosition)
    while (character.PrimaryPart.Position - targetPosition).magnitude > 1 do
        local direction = (targetPosition - character.PrimaryPart.Position).unit
        local moveDirection = direction

        -- Check for nearby players to avoid collisions
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= localPlayer and player.Character and player.Character.PrimaryPart then
                local distance = (character.PrimaryPart.Position - player.Character.PrimaryPart.Position).magnitude
                if distance < 5 then
                    local otherPlayerDirection = (player.Character.PrimaryPart.Position - character.PrimaryPart.Position).unit
                    if math.abs(otherPlayerDirection.X) > math.abs(otherPlayerDirection.Z) then
                        -- Other player is moving left/right
                        moveDirection = Vector3.new(-otherPlayerDirection.X, 0, direction.Z)
                    else
                        -- Other player is moving forward/backward
                        moveDirection = Vector3.new(direction.X, 0, -otherPlayerDirection.Z)
                    end
                end
            end
        end

        humanoid:MoveTo(character.PrimaryPart.Position + moveDirection * 5)
        humanoid.MoveToFinished:Wait()
        RunService.RenderStepped:Wait()
    end
end

-- Main loop
RunService.RenderStepped:Connect(function()
    if hasFootball() then
        highlightPlayer(character)
        moveToPosition(targetPosition1)
        wait(1) -- Pause for a second
        moveToPosition(targetPosition2)
    end
end)
