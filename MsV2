--<< Services >>--
local ReplicatedStorage = game:GetService("ReplicatedStorage")

--<< Variables >>--
local Handshake = ReplicatedStorage.Remotes.CharacterSoundEvent
local Hooks = {}
local HandshakeInts = {}

for i, v in getgc() do
    if typeof(v) == "function" and islclosure(v) then
        if (#getprotos(v) == 1) and table.find(getconstants(getproto(v, 1)), 4000001) then
            hookfunction(v, function() end)
        end
    end
end

Hooks.__namecall = hookmetamethod(game, "__namecall", function(self, ...)
    local Method = getnamecallmethod()
    local Args = {...}

    if not checkcaller() and (self == Handshake) and (Method == "fireServer") and (Args[1] == "\65\67\240\159\146\171") then
        if (#HandshakeInts == 0) then
            HandshakeInts = {table.unpack(Args[2], 2, 18)}
        end

        for i, v in HandshakeInts do
            Args[2][i + 1] = v
        end
    end

    return Hooks.__namecall(self, ...)
end)

task.wait(3)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local leftArm = Character:WaitForChild("Left Arm")
local rightArm = Character:WaitForChild("Right Arm")

-- Configuration
local customDistance = 25
local teleportDelay = 0.1

-- Create the gray part
local grayPart = Instance.new("Part")
grayPart.Size = Vector3.new(customDistance, customDistance, customDistance)
grayPart.Transparency = 0.5
grayPart.Anchored = true
grayPart.CanCollide = false
grayPart.Color = Color3.fromRGB(128, 128, 128)
grayPart.Parent = Workspace

-- Function to find the nearest football
local function findNearestFootball()
    local nearestFootball = nil
    local shortestDistance = math.huge
    for _, obj in pairs(Workspace:GetChildren()) do
        if obj:IsA("Part") and obj.Name == "Football" then
            local distance = (obj.Position - Character.PrimaryPart.Position).magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestFootball = obj
            end
        end
    end
    return nearestFootball
end

-- Function to update the gray part position
local function updateGrayPart()
    local nearestFootball = findNearestFootball()
    if nearestFootball then
        grayPart.Position = nearestFootball.Position
    else
        grayPart.Position = Vector3.new(0, -1000, 0) -- Hide the part if no football is found
    end
end

-- Teleport the football to the local player's hand
local function teleportFootball(arm)
    local nearestFootball = findNearestFootball()
    if nearestFootball then
        wait(teleportDelay)
        nearestFootball.CFrame = arm.CFrame
    end
end

-- Detect touch events
grayPart.Touched:Connect(function(hit)
    if hit.Parent == Character then
        if hit == leftArm or hit == rightArm then
            teleportFootball(hit)
        end
    end
end)

-- Update the gray part continuously
RunService.RenderStepped:Connect(updateGrayPart)
